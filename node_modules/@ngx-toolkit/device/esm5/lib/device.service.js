/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Device, DevicePlatform, DeviceType } from './device.model';
/**
 * see https://github.com/spring-projects/spring-mobile
 */
var DeviceService = /** @class */ (function () {
    function DeviceService() {
    }
    /**
     * @param {?} userAgent
     * @return {?}
     */
    DeviceService.resolveDevice = /**
     * @param {?} userAgent
     * @return {?}
     */
    function (userAgent) {
        if (!userAgent) {
            return new Device(DeviceType.NORMAL, DevicePlatform.UNKNOWN);
        }
        userAgent = userAgent.toLowerCase();
        /**
         * Tablet Detection
         */
        // Apple
        if (userAgent.includes('ipad')) {
            return new Device(DeviceType.TABLET, DevicePlatform.IOS);
        }
        /** @type {?} */
        var isMobile = userAgent.includes('mobile') ||
            DeviceService.KNOWN_MOBILE_USER_AGENT_KEYWORDS.some((/**
             * @param {?} mobileUserAgent
             * @return {?}
             */
            function (mobileUserAgent) { return userAgent.includes(mobileUserAgent); }));
        if (!isMobile) {
            // Android
            if (userAgent.includes('android')) {
                return new Device(DeviceType.TABLET, DevicePlatform.ANDROID);
            }
            // Kindle Fire
            if (userAgent.includes('silk')) {
                return new Device(DeviceType.TABLET, DevicePlatform.UNKNOWN);
            }
        }
        // From keywords
        if (DeviceService.KNOWN_TABLET_USER_AGENT_KEYWORDS.some((/**
         * @param {?} tabletUserAgent
         * @return {?}
         */
        function (tabletUserAgent) { return userAgent.includes(tabletUserAgent); }))) {
            return new Device(DeviceType.TABLET, DevicePlatform.UNKNOWN);
        }
        /**
         * Mobile detection
         */
        // From prefix
        if (userAgent.length >= 4 &&
            DeviceService.KNOWN_MOBILE_USER_AGENT_PREFIXES.indexOf(userAgent.substring(0, 4)) !== -1) {
            return new Device(DeviceType.MOBILE, DevicePlatform.UNKNOWN);
        }
        // Android
        if (userAgent.includes('android')) {
            return new Device(DeviceType.MOBILE, DevicePlatform.ANDROID);
        }
        // Apple
        if (userAgent.includes('iphone') || userAgent.includes('ipod') || userAgent.includes('ipad')) {
            return new Device(DeviceType.MOBILE, DevicePlatform.IOS);
        }
        // From keywords
        if (isMobile) {
            return new Device(DeviceType.MOBILE, DevicePlatform.UNKNOWN);
        }
        /**
         * => Normal device
         */
        return new Device(DeviceType.NORMAL, DevicePlatform.UNKNOWN);
    };
    DeviceService.KNOWN_MOBILE_USER_AGENT_PREFIXES = [
        'w3c ',
        'w3c-',
        'acs-',
        'alav',
        'alca',
        'amoi',
        'avan',
        'benq',
        'bird',
        'blac',
        'blaz',
        'brew',
        'cell',
        'cldc',
        'cmd-',
        'dang',
        'doco',
        'eric',
        'hipt',
        'htc_',
        'inno',
        'ipaq',
        'ipod',
        'jigs',
        'kddi',
        'keji',
        'leno',
        'lg-c',
        'lg-d',
        'lg-g',
        'lge-',
        'lg/u',
        'maui',
        'maxo',
        'midp',
        'mits',
        'mmef',
        'mobi',
        'mot-',
        'moto',
        'mwbp',
        'nec-',
        'newt',
        'noki',
        'palm',
        'pana',
        'pant',
        'phil',
        'play',
        'port',
        'prox',
        'qwap',
        'sage',
        'sams',
        'sany',
        'sch-',
        'sec-',
        'send',
        'seri',
        'sgh-',
        'shar',
        'sie-',
        'siem',
        'smal',
        'smar',
        'sony',
        'sph-',
        'symb',
        't-mo',
        'teli',
        'tim-',
        'tosh',
        'tsm-',
        'upg1',
        'upsi',
        'vk-v',
        'voda',
        'wap-',
        'wapa',
        'wapi',
        'wapp',
        'wapr',
        'webc',
        'winw',
        'winw',
        'xda ',
        'xda-'
    ];
    DeviceService.KNOWN_MOBILE_USER_AGENT_KEYWORDS = [
        'blackberry',
        'webos',
        'ipod',
        'lge vx',
        'midp',
        'maemo',
        'mmp',
        'mobile',
        'netfront',
        'hiptop',
        'nintendo DS',
        'novarra',
        'openweb',
        'opera mobi',
        'opera mini',
        'palm',
        'psp',
        'phone',
        'smartphone',
        'symbian',
        'up.browser',
        'up.link',
        'wap',
        'windows ce'
    ];
    DeviceService.KNOWN_TABLET_USER_AGENT_KEYWORDS = ['ipad', 'playbook', 'hp-tablet', 'kindle'];
    return DeviceService;
}());
export { DeviceService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DeviceService.KNOWN_MOBILE_USER_AGENT_PREFIXES;
    /**
     * @type {?}
     * @private
     */
    DeviceService.KNOWN_MOBILE_USER_AGENT_KEYWORDS;
    /**
     * @type {?}
     * @private
     */
    DeviceService.KNOWN_TABLET_USER_AGENT_KEYWORDS;
}
//# sourceMappingURL=data:application/json;base64,